<?xml version="1.0" ?>
<sdf version="1.5">
  <world name="default">
    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose>32 0 13.5  0 0.6 3.14159</pose>
        <view_controller>orbit</view_controller>
      </camera>
    </gui>
    <scene>
      <ambient>1 1 1 1</ambient>
      <background>0.7 0.7 0.7 1</background>
      <shadows>1</shadows>
    </scene>
    <physics type="ode">
      <gravity>0 -1 -1</gravity>
      <ode>
        <solver>
          <type>quick</type>
          <iters>50</iters>
          <precon_iters>0</precon_iters>
          <sor>1.3</sor>
        </solver>
        <constraints>
          <cfm>0</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>100</contact_max_correcting_vel>
          <contact_surface_layer>0.001</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>0</real_time_update_rate>
      <max_step_size>0.01</max_step_size>
    </physics>
    <include>
      <uri>model://ground_plane</uri>
    </include>
<%
  require "matrix"
  def a_to_s(v)
    Array(v).join(" ")
  end

  boxes = {}
  boxes["box_01"] = {:mass => 1, :mu => 0.998,  :slip => 0,   :x0 => 2}
  boxes["box_02"] = {:mass => 1, :mu => 0.9985, :slip => 0,   :x0 => 4}
  boxes["box_03"] = {:mass => 1, :mu => 0.999,  :slip => 0,   :x0 => 6}
  boxes["box_04"] = {:mass => 1, :mu => 0.9995, :slip => 0,   :x0 => 8}
  boxes["box_05"] = {:mass => 1, :mu => 1,      :slip => 0,   :x0 => 10}
  boxes["box_06"] = {:mass => 1, :mu => 1.01,   :slip => 0,   :x0 => 12}
  boxes["box_slip_01"] = {:mass => 1, :mu => 1.01,   :slip => 0.1, :x0 => 14}
  boxes["box_slip_02"] = {:mass => 5, :mu => 1.01,   :slip => 0.1, :x0 => 16}
  boxes["box_slip_03"] = {:mass => 1, :mu => 1.01,   :slip => 0.5, :x0 => 18}
  boxes["box_slip_04"] = {:mass => 5, :mu => 1.01,   :slip => 0.5, :x0 => 20}
  dx = 1
  dy = 1
  dz = 1
  box_size = Vector[dx, dy, dz]
  boxes.keys.each do |box_prefix|
    mass = boxes[box_prefix][:mass]
    mu = boxes[box_prefix][:mu]
    slip = boxes[box_prefix][:slip]
    x0 = boxes[box_prefix][:x0]

    # compute inertia
    ixx = mass/12.0 * (dy**2 + dz**2)
    iyy = mass/12.0 * (dz**2 + dx**2)
    izz = mass/12.0 * (dx**2 + dy**2)
%>
    <model name="<%= box_prefix %>_model">
      <allow_auto_disable>0</allow_auto_disable>
      <pose><%= x0 %> 8 0.5 0 0 0</pose>
      <link name="<%= box_prefix %>_body">
        <inertial>
          <pose>0 0 -0.5 0 0 0</pose>
          <inertia>
            <ixx><%= ixx %></ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy><%= iyy %></iyy>
            <iyz>0</iyz>
            <izz><%= izz %></izz>
          </inertia>
          <mass><%= mass %></mass>
        </inertial>
        <collision name="<%= box_prefix %>_geom">
          <geometry>
            <box>
              <size><%= a_to_s(box_size) %></size>
            </box>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu><%= mu %></mu>
                <mu2><%= mu %></mu2>
                <slip1><%= slip %></slip1>
                <slip2><%= slip %></slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <soft_cfm>0</soft_cfm>
                <soft_erp>0.2</soft_erp>
                <kp>100000</kp>
                <kd>1</kd>
                <max_vel>100</max_vel>
                <min_depth>0.001</min_depth>
              </ode>
            </contact>
          </surface>
        </collision>
        <visual name="<%= box_prefix %>_geom_visual">
          <geometry>
            <box>
              <size><%= a_to_s(box_size) %></size>
            </box>
          </geometry>
          <material>
            <script>Gazebo/Rocky</script>
          </material>
        </visual>
      </link>
    </model>
<%
  end
%>
  </world>
</sdf>
